{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/table\";\nfunction PanoramaComponent_div_2_th_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 7);\n    i0.ɵɵtext(1, \"ID\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PanoramaComponent_div_2_td_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(element_r5.id);\n  }\n}\nfunction PanoramaComponent_div_2_tr_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 9);\n  }\n}\nfunction PanoramaComponent_div_2_tr_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 10);\n  }\n}\nfunction PanoramaComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"table\", 1);\n    i0.ɵɵelementContainerStart(2, 2);\n    i0.ɵɵtemplate(3, PanoramaComponent_div_2_th_3_Template, 2, 0, \"th\", 3);\n    i0.ɵɵtemplate(4, PanoramaComponent_div_2_td_4_Template, 2, 1, \"td\", 4);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵtemplate(5, PanoramaComponent_div_2_tr_5_Template, 1, 0, \"tr\", 5);\n    i0.ɵɵtemplate(6, PanoramaComponent_div_2_tr_6_Template, 1, 0, \"tr\", 6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"dataSource\", ctx_r0.panoramaData);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"matHeaderRowDef\", ctx_r0.displayedColumns);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matRowDefColumns\", ctx_r0.displayedColumns);\n  }\n}\nexport class PanoramaComponent {\n  constructor(http) {\n    this.http = http;\n    this.displayedColumns = ['id']; // Add other column names\n  }\n\n  ngOnInit() {\n    this.fetchPanoramaData();\n  }\n  fetchPanoramaData() {\n    this.http.get('http://localhost:8000/api/v1/panorama').subscribe(data => {\n      this.panoramaData = data;\n    }, error => {\n      console.error('Error fetching Panorama data:', error);\n    });\n  }\n}\nPanoramaComponent.ɵfac = function PanoramaComponent_Factory(t) {\n  return new (t || PanoramaComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nPanoramaComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PanoramaComponent,\n  selectors: [[\"app-panorama\"]],\n  decls: 3,\n  vars: 1,\n  consts: [[4, \"ngIf\"], [\"mat-table\", \"\", 1, \"mat-elevation-z8\", 3, \"dataSource\"], [\"matColumnDef\", \"id\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"]],\n  template: function PanoramaComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Panorama\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, PanoramaComponent_div_2_Template, 7, 3, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.panoramaData);\n    }\n  },\n  dependencies: [i2.NgIf, i3.MatTable, i3.MatHeaderCellDef, i3.MatHeaderRowDef, i3.MatColumnDef, i3.MatCellDef, i3.MatRowDef, i3.MatHeaderCell, i3.MatCell, i3.MatHeaderRow, i3.MatRow],\n  styles: [\".spacer[_ngcontent-%COMP%] {\\n  flex: 1 1 auto;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFub3JhbWEvcGFub3JhbWEuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFBO0FBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyIuc3BhY2VyIHtcbiAgICBmbGV4OiAxIDEgYXV0bztcbiAgfVxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";;;;;;IAIMA,6BAAsC;IAAAA,kBAAE;IAAAA,iBAAK;;;;;IAC7CA,6BAAuC;IAAAA,YAAc;IAAAA,iBAAK;;;;IAAnBA,eAAc;IAAdA,mCAAc;;;;;IAKvDA,wBAA4D;;;;;IAC5DA,yBAAkE;;;;;IAVtEA,2BAA0B;IAEtBA,gCAAgC;IAC9BA,sEAA6C;IAC7CA,sEAA0D;IAC5DA,0BAAe;IAIfA,sEAA4D;IAC5DA,sEAAkE;IACpEA,iBAAQ;;;;IAVSA,eAA2B;IAA3BA,gDAA2B;IAQtBA,eAAiC;IAAjCA,yDAAiC;IACpBA,eAA0B;IAA1BA,0DAA0B;;;ACH/D,OAAM,MAAOC,iBAAiB;EAI5BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,qBAAgB,GAAa,CAAC,IAAI,CAAC,CAAC,CAAC;EAEG;;EAExCC,QAAQ;IACN,IAAI,CAACC,iBAAiB,EAAE;EAC1B;EAEAA,iBAAiB;IACf,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,uCAAuC,CAAC,CAACC,SAAS,CAC7DC,IAAS,IAAI;MACZ,IAAI,CAACC,YAAY,GAAGD,IAAI;IAC1B,CAAC,EACAE,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD,CAAC,CACF;EACH;;AAnBWT,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAW;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDR9BhB,0BAAI;MAAAA,wBAAQ;MAAAA,iBAAK;MACjBA,kEAYM;;;MAZAA,eAAkB;MAAlBA,uCAAkB","names":["i0","PanoramaComponent","constructor","http","ngOnInit","fetchPanoramaData","get","subscribe","data","panoramaData","error","console","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/home/cdot/dev/public/prisma-panorama-diffsync/frontend/src/app/panorama/panorama.component.html","/home/cdot/dev/public/prisma-panorama-diffsync/frontend/src/app/panorama/panorama.component.ts"],"sourcesContent":["<h1>Panorama</h1>\n<div *ngIf=\"panoramaData\">\n  <table mat-table [dataSource]=\"panoramaData\" class=\"mat-elevation-z8\">\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef>ID</th>\n      <td mat-cell *matCellDef=\"let element\">{{element.id}}</td>\n    </ng-container>\n\n    <!-- Other columns -->\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-panorama',\n  templateUrl: './panorama.component.html',\n  styleUrls: ['./panorama.component.scss']\n})\nexport class PanoramaComponent implements OnInit {\n  panoramaData: any;\n  displayedColumns: string[] = ['id']; // Add other column names\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.fetchPanoramaData();\n  }\n\n  fetchPanoramaData() {\n    this.http.get('http://localhost:8000/api/v1/panorama').subscribe(\n      (data: any) => {\n        this.panoramaData = data;\n      },\n      (error) => {\n        console.error('Error fetching Panorama data:', error);\n      }\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}