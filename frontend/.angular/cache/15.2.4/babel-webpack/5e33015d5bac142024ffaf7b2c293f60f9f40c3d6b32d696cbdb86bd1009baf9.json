{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../auth.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/table\";\nfunction PrismaComponent_div_2_th_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 7);\n    i0.ɵɵtext(1, \"ID\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PrismaComponent_div_2_td_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(element_r5.id);\n  }\n}\nfunction PrismaComponent_div_2_tr_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 9);\n  }\n}\nfunction PrismaComponent_div_2_tr_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 10);\n  }\n}\nfunction PrismaComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"table\", 1);\n    i0.ɵɵelementContainerStart(2, 2);\n    i0.ɵɵtemplate(3, PrismaComponent_div_2_th_3_Template, 2, 0, \"th\", 3);\n    i0.ɵɵtemplate(4, PrismaComponent_div_2_td_4_Template, 2, 1, \"td\", 4);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵtemplate(5, PrismaComponent_div_2_tr_5_Template, 1, 0, \"tr\", 5);\n    i0.ɵɵtemplate(6, PrismaComponent_div_2_tr_6_Template, 1, 0, \"tr\", 6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"dataSource\", ctx_r0.prismaData);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"matHeaderRowDef\", ctx_r0.displayedColumns);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matRowDefColumns\", ctx_r0.displayedColumns);\n  }\n}\nexport class PrismaComponent {\n  constructor(http, authService) {\n    this.http = http;\n    this.authService = authService;\n    this.displayedColumns = ['tenant_name', 'client_id', 'client_secret', 'tsg_id', 'author', 'created_at'];\n  }\n  ngOnInit() {\n    this.fetchPrismaData();\n  }\n  fetchPrismaData() {\n    this.http.get('http://localhost:8000/api/v1/prisma').subscribe(data => {\n      this.prismaData = data;\n    }, error => {\n      console.error('Error fetching Prisma data:', error);\n    });\n  }\n}\nPrismaComponent.ɵfac = function PrismaComponent_Factory(t) {\n  return new (t || PrismaComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.AuthService));\n};\nPrismaComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PrismaComponent,\n  selectors: [[\"app-prisma\"]],\n  decls: 3,\n  vars: 1,\n  consts: [[4, \"ngIf\"], [\"mat-table\", \"\", 1, \"mat-elevation-z8\", 3, \"dataSource\"], [\"matColumnDef\", \"id\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"]],\n  template: function PrismaComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Prisma\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, PrismaComponent_div_2_Template, 7, 3, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.prismaData);\n    }\n  },\n  dependencies: [i3.NgIf, i4.MatTable, i4.MatHeaderCellDef, i4.MatHeaderRowDef, i4.MatColumnDef, i4.MatCellDef, i4.MatRowDef, i4.MatHeaderCell, i4.MatCell, i4.MatHeaderRow, i4.MatRow],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;IAIMA,6BAAsC;IAAAA,kBAAE;IAAAA,iBAAK;;;;;IAC7CA,6BAAuC;IAAAA,YAAc;IAAAA,iBAAK;;;;IAAnBA,eAAc;IAAdA,mCAAc;;;;;IAKvDA,wBAA4D;;;;;IAC5DA,yBAAkE;;;;;IAVtEA,2BAAwB;IAEpBA,gCAAgC;IAC9BA,oEAA6C;IAC7CA,oEAA0D;IAC5DA,0BAAe;IAIfA,oEAA4D;IAC5DA,oEAAkE;IACpEA,iBAAQ;;;;IAVSA,eAAyB;IAAzBA,8CAAyB;IAQpBA,eAAiC;IAAjCA,yDAAiC;IACpBA,eAA0B;IAA1BA,0DAA0B;;;ACF/D,OAAM,MAAOC,eAAe;EAI1BC,YAAoBC,IAAgB,EAAUC,WAAwB;IAAlD,SAAI,GAAJD,IAAI;IAAsB,gBAAW,GAAXC,WAAW;IAFzD,qBAAgB,GAAa,CAAC,aAAa,EAAE,WAAW,EAAE,eAAe,EAAE,QAAQ,EAAE,QAAQ,EAAE,YAAY,CAAC;EAElC;EAE1EC,QAAQ;IACN,IAAI,CAACC,eAAe,EAAE;EACxB;EAEAA,eAAe;IACb,IAAI,CAACH,IAAI,CAACI,GAAG,CAAC,qCAAqC,CAAC,CAACC,SAAS,CAC3DC,IAAS,IAAI;MACZ,IAAI,CAACC,UAAU,GAAGD,IAAI;IACxB,CAAC,EACAE,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD,CAAC,CACF;EACH;;AAnBWV,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAY;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDT5BjB,0BAAI;MAAAA,sBAAM;MAAAA,iBAAK;MACfA,gEAYM;;;MAZAA,eAAgB;MAAhBA,qCAAgB","names":["i0","PrismaComponent","constructor","http","authService","ngOnInit","fetchPrismaData","get","subscribe","data","prismaData","error","console","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/home/cdot/dev/public/prisma-panorama-diffsync/frontend/src/app/prisma/prisma.component.html","/home/cdot/dev/public/prisma-panorama-diffsync/frontend/src/app/prisma/prisma.component.ts"],"sourcesContent":["<h1>Prisma</h1>\n<div *ngIf=\"prismaData\">\n  <table mat-table [dataSource]=\"prismaData\" class=\"mat-elevation-z8\">\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef>ID</th>\n      <td mat-cell *matCellDef=\"let element\">{{element.id}}</td>\n    </ng-container>\n\n    <!-- Other columns -->\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-prisma',\n  templateUrl: './prisma.component.html',\n  styleUrls: ['./prisma.component.scss']\n})\nexport class PrismaComponent implements OnInit {\n  prismaData: any;\n  displayedColumns: string[] = ['tenant_name', 'client_id', 'client_secret', 'tsg_id', 'author', 'created_at'];\n\n  constructor(private http: HttpClient, private authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.fetchPrismaData();\n  }\n\n  fetchPrismaData() {\n    this.http.get('http://localhost:8000/api/v1/prisma').subscribe(\n      (data: any) => {\n        this.prismaData = data;\n      },\n      (error) => {\n        console.error('Error fetching Prisma data:', error);\n      }\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}