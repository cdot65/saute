name: Backend CI

on:
  push:
    branches:
      - main
      - development
    paths:
      - "backend/**"
  pull_request:
    branches:
      - main
    paths:
      - "backend/**"
  schedule:
    - cron: "0 8 * * *" # Run every day at 2am CST (which is 8am UTC)

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    env:
      SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
      SENDGRID_FROM_EMAIL: ${{ secrets.SENDGRID_FROM_EMAIL }}
      DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
      DJANGO_DEBUG: ${{ secrets.DJANGO_DEBUG }}
      DJANGO_ALLOWED_HOSTS: ${{ secrets.DJANGO_ALLOWED_HOSTS }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.9

      - name: Create .env file for GitHub Actions
        run: |
          cd backend
          touch .env
          echo "DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}" >> .env
          echo "DJANGO_DEBUG=${{ secrets.DJANGO_DEBUG }}" >> .env
          echo "DJANGO_ALLOWED_HOSTS=${{ secrets.DJANGO_ALLOWED_HOSTS }}" >> .env
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt

      - name: Code formatting with Black
        run: |
          pip install black
          black --check backend/

      - name: Linting with Flake8 and yamllint
        run: |
          pip install flake8 yamllint
          flake8 backend/ --exit-zero
          yamllint backend/

      - name: Install Redis
        run: |
          sudo apt-get update
          sudo apt-get install redis-server

      - name: Build Docker images
        env:
          CPU_ARCHITECTURE: x86_64
        run: |
          docker-compose -f backend/docker-compose.yml build

      - name: Deploy with Docker Compose
        run: |
          docker-compose -f backend/docker-compose.yml up -d

      - name: Wait for web application to start
        run: |
          echo "Waiting for web application to start..."
          sleep 10

      - name: Make database migrations files
        run: |
          set -x
          cd backend
          docker-compose exec -T web python manage.py makemigrations --verbose

      - name: Migrate database
        run: |
          docker-compose exec -T web python manage.py migrate

      - name: Run tests
        run: |
          docker-compose exec -T web python manage.py test
